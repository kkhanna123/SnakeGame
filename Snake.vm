function Snake.new 1
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 1
call Math.multiply 2
pop local 0
push local 0
push constant 2
add
call Array.new 1
pop this 0
push constant 2
pop this 1
push constant 2
pop this 2
push constant 0
push this 0
add
push argument 0
push constant 4
call Math.divide 2
push argument 1
push constant 2
call Math.divide 2
call SnakeSegment.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push argument 0
push constant 4
call Math.divide 2
push constant 1
sub
push argument 1
push constant 2
call Math.divide 2
call SnakeSegment.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Snake.changeDirection 0
push argument 0
pop pointer 0
push this 1
push argument 1
push constant 2
add
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 1
push argument 1
push constant 2
sub
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push argument 1
pop this 1
push constant 0
return
function Snake.getLength 0
push argument 0
pop pointer 0
push this 2
return
function Snake.move 5
push argument 0
pop pointer 0
push this 2
push constant 1
sub
pop local 4
push constant 0
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call SnakeSegment.getX 1
pop local 2
push local 0
call SnakeSegment.getY 1
pop local 3
push this 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 1
add
pop local 3
label IF_FALSE0
push this 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push constant 1
add
pop local 2
label IF_FALSE1
push this 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push constant 1
sub
pop local 3
label IF_FALSE2
push this 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
push constant 1
sub
pop local 2
label IF_FALSE3
label WHILE_EXP0
push local 4
push constant 1
neg
gt
not
if-goto WHILE_END0
push local 4
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call SnakeSegment.getX 1
push local 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
call SnakeSegment.getY 1
push local 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
label IF_FALSE4
push local 4
push constant 1
add
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push constant 1
sub
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call SnakeSegment.getX 1
pop local 2
push local 0
call SnakeSegment.getY 1
pop local 3
push this 1
push constant 1
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 3
push constant 1
add
pop local 3
label IF_FALSE6
push this 1
push constant 2
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 2
push constant 1
add
pop local 2
label IF_FALSE7
push this 1
push constant 3
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 3
push constant 1
sub
pop local 3
label IF_FALSE8
push this 1
push constant 4
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 2
push constant 1
sub
pop local 2
label IF_FALSE9
push local 2
push argument 1
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 3
push argument 2
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push constant 0
push this 0
add
push local 2
push local 3
call SnakeSegment.new 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
push argument 3
push argument 1
push constant 37
call Math.multiply 2
push argument 1
push constant 37
call Math.multiply 2
push constant 28
call Math.divide 2
push constant 28
call Math.multiply 2
push constant 2
add
sub
push argument 2
push constant 16
call Math.multiply 2
push argument 2
push constant 16
call Math.multiply 2
push constant 12
call Math.divide 2
push constant 12
call Math.multiply 2
sub
push constant 2
add
call Food.setXY 3
pop temp 0
goto IF_END11
label IF_FALSE11
push this 2
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push local 2
push local 3
call SnakeSegment.setXY 3
pop temp 0
push constant 0
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END11
goto IF_END10
label IF_FALSE10
push this 2
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push local 2
push local 3
call SnakeSegment.setXY 3
pop temp 0
push constant 0
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END10
push local 2
push constant 0
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push constant 0
not
return
label IF_FALSE12
push local 2
push argument 4
eq
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push constant 0
not
return
label IF_FALSE13
push local 3
push constant 0
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push constant 0
not
return
label IF_FALSE14
push local 3
push argument 5
eq
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push constant 0
not
return
label IF_FALSE15
push constant 0
return
function Snake.draw 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
push argument 1
call SnakeSegment.draw 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
