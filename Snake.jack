class Snake {

	field Array arr; // Array to hold the snake
	field int direction; // 1 = up, 2 = right, 3 = down, 4 = left
	field int length; // Length of snake so I can just create a single massive array


	/** Constructs a new Snake Object */
	constructor Snake new(int gridX, int gridY) {

		//
		// Snake head at 0, Snake tail at length-1
		//

		var int numSquares;
		let numSquares = gridX*gridY;
		let arr = Array.new(numSquares+2);

		// Initialize direction to right, length to 2 
		let direction = 2;
		let length = 2;


		let arr[0] = SnakeSegment.new(gridX/4,gridY/2);
		let arr[1] = SnakeSegment.new((gridX/4)-1,gridY/2);

		return this;
	}


	method void changeDirection(int newDir) {
		if (direction = (newDir+2)) {
			return;
		}
		if (direction = (newDir-2)) {
			return;
		}
		let direction = newDir;
		return;
	}

	method int getLength() {
		return length;
	}


	method boolean move(int foodX, int foodY, Food food, int l, int w) {

		// Move all Snake Segments one back

		var SnakeSegment oldHead;
		var SnakeSegment seg;
		var int oldX;
		var int oldY;

		var int i;
		let i = length-1;



		let oldHead = arr[0];
		let oldX = oldHead.getX();
		let oldY = oldHead.getY();



		if (direction = 1) {
			let oldY = oldY+1;
		}
		if (direction = 2) {
			let oldX = oldX+1;
		}
		if (direction = 3) {
			let oldY = oldY-1;
		}
		if (direction = 4) {
			let oldX = oldX-1;
		}

		while (i > -1) {
			let seg = arr[i];

			if (seg.getX() = oldX) {
				if (seg.getY() = oldY) {
					return true;
				}
			}

			let arr[i+1] = seg;
			let i = i-1;

		}

		let oldHead = arr[1];
		let oldX = oldHead.getX();
		let oldY = oldHead.getY();



		if (direction = 1) {
			let oldY = oldY+1;
		}
		if (direction = 2) {
			let oldX = oldX+1;
		}
		if (direction = 3) {
			let oldY = oldY-1;
		}
		if (direction = 4) {
			let oldX = oldX-1;
		}



		if (oldX = foodX) {
			if (oldY = foodY) {
				let arr[0] = SnakeSegment.new(oldX,oldY);
				let length = length+1;
				do food.setXY((foodX*37)-(((((foodX*37)/28)*28))+2),((foodY*16)-(((foodY*16)/12)*12))+2);
			} else {
				let seg = arr[length];
				do seg.setXY(oldX,oldY);
				let arr[0] = seg;
			}
		} else {
			let seg = arr[length];
			do seg.setXY(oldX,oldY);
			let arr[0] = seg;
		}


		if (oldX=0) {
			return true;
		} 

		if (oldX = l) {
			return true;
		}

		if (oldY = 0) {
			return true;
		}

		if (oldY = w) {
			return true;
		}

		return false; // Not dead
	}


	// Draw snake by drawing all parts of the snake
	method void draw(SnakeGame game) {
		var int i;
		var SnakeSegment seg;
		let i = 0;
		while (i < length) {
			let seg = arr[i];
			do seg.draw(game);

			let i = i+1;

		}



		return;
	}

}



